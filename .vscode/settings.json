// Overwrite settings by placing them into your settings file.
{

//-------- Editor configuration --------

    // Controls the font family.
    "editor.fontFamily": "Consolas, 'Courier New', monospace",

    // Controls the font size.
    "editor.fontSize": 14,

    // Controls the line height.
    "editor.lineHeight": 0,

    // Controls visibility of line numbers
    "editor.lineNumbers": true,

    // Controls visibility of the glyph margin
    "editor.glyphMargin": false,

    // Columns at which to show vertical rulers
    "editor.rulers": [],

    // Characters that will be used as word separators when doing word related navigations or operations
    "editor.wordSeparators": "`~!@#$%^&*()-=+[{]}\\|;:'\",.<>/?",

    // The number of spaces a tab is equal to.
    "editor.tabSize": 4,

    // Insert spaces when pressing Tab.
    "editor.insertSpaces": true,

    // When opening a file, `editor.tabSize` and `editor.insertSpaces` will be detected based on the file contents.
    "editor.detectIndentation": true,

    // Controls if selections have rounded corners
    "editor.roundedSelection": true,

    // Controls if the editor will scroll beyond the last line
    "editor.scrollBeyondLastLine": true,

    // Controls after how many characters the editor will wrap to the next line. Setting this to 0 turns on viewport width wrapping (word wrapping). Setting this to -1 forces the editor to never wrap.
    "editor.wrappingColumn": 100,

    // Controls the indentation of wrapped lines. Can be one of 'none', 'same' or 'indent'.
    "editor.wrappingIndent": "same",

    // A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events
    "editor.mouseWheelScrollSensitivity": 1,

    // Controls if quick suggestions should show up or not while typing
    "editor.quickSuggestions": true,

    // Controls the delay in ms after which quick suggestions will show up
    "editor.quickSuggestionsDelay": 10,

    // Enables parameter hints
    "editor.parameterHints": true,

    // Controls if the editor should automatically close brackets after opening them
    "editor.autoClosingBrackets": true,

    // Controls if the editor should automatically format the line after typing
    "editor.formatOnType": false,

    // Controls if suggestions should automatically show up when typing trigger characters
    "editor.suggestOnTriggerCharacters": true,

    // Controls if suggestions should be accepted 'Enter' - in addition to 'Tab'. Helps to avoid ambiguity between inserting new lines or accepting suggestions.
    "editor.acceptSuggestionOnEnter": true,

    // Controls whether the editor should highlight similar matches to the selection
    "editor.selectionHighlight": true,

    // Controls the number of decorations that can show up at the same position in the overview ruler
    "editor.overviewRulerLanes": 3,

    // Controls the cursor blinking animation, accepted values are 'blink', 'visible', and 'hidden'
    "editor.cursorBlinking": "blink",

    // Controls the cursor style, accepted values are 'block' and 'line'
    "editor.cursorStyle": "line",

    // Enables font ligatures
    "editor.fontLigatures": false,

    // Controls if the cursor should be hidden in the overview ruler.
    "editor.hideCursorInOverviewRuler": false,

    // Controls whether the editor should render whitespace characters
    "editor.renderWhitespace": false,

    // Controls if the editor shows reference information for the modes that support it
    "editor.referenceInfos": true,

    // Controls whether the editor has code folding enabled
    "editor.folding": true,

    // Inserting and deleting whitespace follows tab stops
    "editor.useTabStops": true,

    // Remove trailing auto inserted whitespace
    "editor.trimAutoWhitespace": true,

    // Keep peek editors open even when double clicking their content or when hitting Escape.
    "editor.stablePeek": false,

    // Controls if the diff editor shows the diff side by side or inline
    "diffEditor.renderSideBySide": true,

    // Controls if the diff editor shows changes in leading or trailing whitespace as diffs
    "diffEditor.ignoreTrimWhitespace": true,

    // Enable word based suggestions.
    "editor.wordBasedSuggestions": true,


//-------- Emmet configuration --------

    // When enabled, emmet abbreviations are expanded when pressing TAB.
    "emmet.triggerExpansionOnTab": true,


//-------- Workbench configuration --------

    // Controls if opened editors should show in tabs or not.
    "workbench.editor.showTabs": true,

    // Controls if opened editors show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).
    "workbench.editor.enablePreview": true,

    // Controls if opened editors from quick open show as preview. Preview editors are reused until they are kept (e.g. via double click or editing).
    "workbench.editor.enablePreviewFromQuickOpen": true,

    // Controls where editors open. Select 'left' or 'right' to open editors to the left or right of the current active one. Select 'first' or 'last' to open editors independently from the currently active one.
    "workbench.editor.openPositioning": "left",


//-------- Window configuration --------

    // When enabled, will open files in a new window instead of reusing an existing instance.
    "window.openFilesInNewWindow": true,

    // Controls how folders are being reopened after a restart. Select 'none' to never reopen a folder, 'one' to reopen the last folder you worked on or 'all' to reopen all folders of your last session.
    "window.reopenFolders": "one",

    // Controls if a window should restore to full screen mode if it was exited in full screen mode.
    "window.restoreFullscreen": false,

    // Adjust the zoom level of the window. The original size is 0 and each increment above (e.g. 1) or below (e.g. -1) represents zooming 20% larger or smaller. You can also enter decimals to adjust the zoom level with a finer granularity.
    "window.zoomLevel": 0,


//-------- Files configuration --------

    // Configure glob patterns for excluding files and folders.
    "files.exclude": {
        "**/.git": true,
        "**/.svn": true,
        "**/.DS_Store": true,
        "**/node_modules": true,
        "**/tmp": true,
        "**/typings": true,
        "**/.*": true,
		"**/dist": true,
		"**/e2e": true,
		"**/ng2" : true
    },

    // Configure file associations to languages (e.g. "*.extension": "html"). These have precedence over the default associations of the languages installed.
    "files.associations": {},

    // The default character set encoding to use when reading and writing files.
    "files.encoding": "utf8",

    // The default end of line character.
    "files.eol": "\r\n",

    // When enabled, will trim trailing whitespace when you save a file.
    "files.trimTrailingWhitespace": false,

    // Controls auto save of dirty files. Accepted values:  "off", "afterDelay", "onFocusChange". If set to "afterDelay" you can configure the delay in "files.autoSaveDelay".
    "files.autoSave": "off",

    // Controls the delay in ms after which a dirty file is saved automatically. Only applies when "files.autoSave" is set to "afterDelay"
    "files.autoSaveDelay": 1000,

    // Configure glob patterns of file paths to exclude from file watching. Changing this setting requires a restart. When you experience Code consuming lots of cpu time on startup, you can exclude large folders to reduce the initial load.
    "files.watcherExclude": {
        "**/.git/objects/**": true
    },


//-------- File Explorer configuration --------

    // Number of editors shown in the Open Editors pane. Set it to 0 to hide the pane.
    "explorer.openEditors.visible": 9,

    // Controls if the height of the open editors section should adapt dynamically to the number of elements or not.
    "explorer.openEditors.dynamicHeight": true,

    // Controls if the explorer should automatically reveal files when opening them.
    "explorer.autoReveal": true,


//-------- Search configuration --------

    // Configure glob patterns for excluding files and folders in searches. Inherits all glob patterns from the files.exclude setting.
    "search.exclude": {
        "**/node_modules": true,
        "**/bower_components": true,
        "**/tmp": true,
        "**/dist": true,
        "**/public": true,
        "**/api": true,
		"**/e2e": true,
		"**/ng2" : true
    },


//-------- HTTP configuration --------

    // The proxy setting to use. If not set will be taken from the http_proxy and https_proxy environment variables
    "http.proxy": "",

    // Whether the proxy server certificate should be verified against the list of supplied CAs.
    "http.proxyStrictSSL": true,


//-------- Git configuration --------

    // Is git enabled
    "git.enabled": false,

    // Path to the git executable
    "git.path": null,

    // Whether auto fetching is enabled.
    "git.autofetch": true,

    // Whether long commit messages should be warned about.
    "git.enableLongCommitWarning": true,

    // Always allow large repositories to be managed by Code.
    "git.allowLargeRepositories": false,


//-------- Update configuration --------

    // Configure whether you receive automatic updates from an update channel. Requires a restart after change.
    "update.channel": "default",


//-------- Telemetry configuration --------

    // Enable crash reports to be sent to Microsoft.
	// This option requires restart to take effect.
    "telemetry.enableCrashReporter": true,


//-------- HTML configuration --------

    // Maximum amount of characters per line (0 = disable).
    "html.format.wrapLineLength": 120,

    // List of tags, comma separated, that shouldn't be reformatted. 'null' defaults to all tags listed at https://www.w3.org/TR/html5/dom.html#phrasing-content.
    "html.format.unformatted": "a, abbr, acronym, b, bdo, big, br, button, cite, code, dfn, em, i, img, input, kbd, label, map, object, q, samp, script, select, small, span, strong, sub, sup, textarea, tt, var",

    // Indent <head> and <body> sections.
    "html.format.indentInnerHtml": false,

    // Whether existing line breaks before elements should be preserved. Only works before elements, not inside tags or for text.
    "html.format.preserveNewLines": true,

    // Maximum number of line breaks to be preserved in one chunk. Use 'null' for unlimited.
    "html.format.maxPreserveNewLines": null,

    // Format and indent {{#foo}} and {{/foo}}.
    "html.format.indentHandlebars": false,

    // End with a newline.
    "html.format.endWithNewline": false,

    // List of tags, comma separated, that should have an extra newline before them. 'null' defaults to "head, body, /html".
    "html.format.extraLiners": "head, body, /html",


//-------- Telemetry configuration --------

    // Enable usage data and errors to be sent to Microsoft.
    "telemetry.enableTelemetry": true,


//-------- JSON configuration --------

    // Associate schemas to JSON files in the current project
    "json.schemas": [],


//-------- Integrated terminal configuration --------

    // The path of the shell that the terminal uses on Linux.
    "terminal.integrated.shell.linux": "sh",

    // The command line arguments to use when on the Linux terminal.
    "terminal.integrated.shellArgs.linux": [],

    // The path of the shell that the terminal uses on OS X.
    "terminal.integrated.shell.osx": "sh",

    // The command line arguments to use when on the OS X terminal.
    "terminal.integrated.shellArgs.osx": [],

    // The path of the shell that the terminal uses on Windows.
    "terminal.integrated.shell.windows": "C:\\Windows\\system32\\cmd.exe",

    // The command line arguments to use when on the Windows terminal.
    "terminal.integrated.shellArgs.windows": [],

    // Controls the font family of the terminal, this defaults to editor.fontFamily's value.
    "terminal.integrated.fontFamily": "",

    // Controls the font size of the terminal, this defaults to editor.fontSize's value.
    "terminal.integrated.fontSize": 0,

    // Controls the line height of the terminal, this defaults to editor.lineHeight's value.
    "terminal.integrated.lineHeight": 0,


//-------- External terminal configuration --------

    // Customizes which terminal to run on Windows.
    "terminal.external.windowsExec": "cmd",

    // Customizes which terminal application to run on OS X.
    "terminal.external.osxExec": "Terminal.app",

    // Customizes which terminal to run on Linux.
    "terminal.external.linuxExec": "xterm",


//-------- Problems view configuration --------

    // Controls if Problems view should automatically reveal files when opening them
    "problems.autoReveal": true,


//-------- RelativePath extension configuration --------

    // An array of glob keys to ignore when searching.
    "relativePath.ignore": [
        "**/node_modules/**",
        "**/*.dll",
        "**/obj/**",
        "**/objd/**"
    ],


//-------- TypeScript configuration --------

    // Specifies the folder path containing the tsserver and lib*.d.ts files to use.
    "typescript.tsdk": null,

    // Complete functions with their parameter signature.
    "typescript.useCodeSnippetsOnMethodSuggest": false,

    // Enable / disable TypeScript validation
    "typescript.validate.enable": true,

    // Enables tracing of messages send to the TS server
    "typescript.tsserver.trace": "off",

    // Defines space handling after a comma delimiter
    "typescript.format.insertSpaceAfterCommaDelimiter": true,

    //  Defines space handling after a semicolon in a for statement
    "typescript.format.insertSpaceAfterSemicolonInForStatements": true,

    // Defines space handling after a binary operator
    "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

    // Defines space handling after keywords in control flow statement
    "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

    // Defines space handling after function keyword for anonymous functions
    "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

    // Defines space handling after opening and before closing non empty parenthesis
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

    // Defines space handling after opening and before closing non empty brackets
    "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

    // Defines whether an open brace is put onto a new line for functions or not
    "typescript.format.placeOpenBraceOnNewLineForFunctions": false,

    // Defines whether an open brace is put onto a new line for control blocks or not
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": false,

    // Enable / disable JavaScript validation
    "javascript.validate.enable": true,

    // Defines space handling after a comma delimiter
    "javascript.format.insertSpaceAfterCommaDelimiter": true,

    //  Defines space handling after a semicolon in a for statement
    "javascript.format.insertSpaceAfterSemicolonInForStatements": true,

    // Defines space handling after a binary operator
    "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": true,

    // Defines space handling after keywords in control flow statement
    "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": true,

    // Defines space handling after function keyword for anonymous functions
    "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": true,

    // Defines space handling after opening and before closing non empty parenthesis
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,

    // Defines space handling after opening and before closing non empty brackets
    "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": false,

    // Defines whether an open brace is put onto a new line for functions or not
    "javascript.format.placeOpenBraceOnNewLineForFunctions": false,

    // Defines whether an open brace is put onto a new line for control blocks or not
    "javascript.format.placeOpenBraceOnNewLineForControlBlocks": false,



//-------- Markdown preview configuration --------

    // A list of URLs or local paths to CSS style sheets to use from the markdown preview.
    "markdown.styles": null,


//-------- CSS configuration --------

    // Controls CSS validation and problem severities.

    // Enables or disables all validations
    "css.validate": true,

    // When using a vendor-specific prefix make sure to also include all other vendor-specific properties
    "css.lint.compatibleVendorPrefixes": "ignore",

    // When using a vendor-specific prefix also include the standard property
    "css.lint.vendorPrefix": "warning",

    // Do not use duplicate style definitions
    "css.lint.duplicateProperties": "ignore",

    // Do not use empty rulesets
    "css.lint.emptyRules": "warning",

    // Import statements do not load in parallel
    "css.lint.importStatement": "ignore",

    // Do not use width or height when using padding or border
    "css.lint.boxModel": "ignore",

    // The universal selector (*) is known to be slow
    "css.lint.universalSelector": "ignore",

    // No unit for zero needed
    "css.lint.zeroUnits": "ignore",

    // @font-face rule must define 'src' and 'font-family' properties
    "css.lint.fontFaceProperties": "warning",

    // Hex colors must consist of three or six hex numbers
    "css.lint.hexColorLength": "error",

    // Invalid number of parameters
    "css.lint.argumentsInColorFunction": "error",

    // Unknown property.
    "css.lint.unknownProperties": "warning",

    // IE hacks are only necessary when supporting IE7 and older
    "css.lint.ieHack": "ignore",

    // Unknown vendor specific property.
    "css.lint.unknownVendorSpecificProperties": "ignore",

    // Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect
    "css.lint.propertyIgnoredDueToDisplay": "warning",

    // Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
    "css.lint.important": "ignore",

    // Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
    "css.lint.float": "ignore",

    // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
    "css.lint.idSelector": "ignore",


//-------- SCSS (Sass) configuration --------

    // Controls SCSS validation and problem severities.

    // Enables or disables all validations
    "scss.validate": true,

    // When using a vendor-specific prefix make sure to also include all other vendor-specific properties
    "scss.lint.compatibleVendorPrefixes": "ignore",

    // When using a vendor-specific prefix also include the standard property
    "scss.lint.vendorPrefix": "warning",

    // Do not use duplicate style definitions
    "scss.lint.duplicateProperties": "ignore",

    // Do not use empty rulesets
    "scss.lint.emptyRules": "warning",

    // Import statements do not load in parallel
    "scss.lint.importStatement": "ignore",

    // Do not use width or height when using padding or border
    "scss.lint.boxModel": "ignore",

    // The universal selector (*) is known to be slow
    "scss.lint.universalSelector": "ignore",

    // No unit for zero needed
    "scss.lint.zeroUnits": "ignore",

    // @font-face rule must define 'src' and 'font-family' properties
    "scss.lint.fontFaceProperties": "warning",

    // Hex colors must consist of three or six hex numbers
    "scss.lint.hexColorLength": "error",

    // Invalid number of parameters
    "scss.lint.argumentsInColorFunction": "error",

    // Unknown property.
    "scss.lint.unknownProperties": "warning",

    // IE hacks are only necessary when supporting IE7 and older
    "scss.lint.ieHack": "ignore",

    // Unknown vendor specific property.
    "scss.lint.unknownVendorSpecificProperties": "ignore",

    // Property is ignored due to the display. E.g. with 'display: inline', the width, height, margin-top, margin-bottom, and float properties have no effect
    "scss.lint.propertyIgnoredDueToDisplay": "warning",

    // Avoid using !important. It is an indication that the specificity of the entire CSS has gotten out of control and needs to be refactored.
    "scss.lint.important": "ignore",

    // Avoid using 'float'. Floats lead to fragile CSS that is easy to break if one aspect of the layout changes.
    "scss.lint.float": "ignore",

    // Selectors should not contain IDs because these rules are too tightly coupled with the HTML.
    "scss.lint.idSelector": "ignore"
}